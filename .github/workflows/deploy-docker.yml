name: Docker deployment

on:
  push:
    branches:
      - develop
      - main
env:
  ENV_NAME: ${{ github.ref_name == 'develop' && 'test' || 'prod' }}

jobs:
  Docker-deployment:
    name: Deploy Docker
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fournir le mot de passe Vault
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "${{ secrets.VAULT_PASSWORD }}" > .vault_pass;
          elif [ "${{ github.ref_name }}" == "develop" ]; then
            echo "${{ secrets.VAULT_PASSWORD_TEST }}" > .vault_pass;
          else
            echo "Branche non prise en charge pour fournir le mot de passe Vault.";
            exit 1;
          fi
      - name: Fournir le mot de passe Vault localhost
        run: |
          if [ -n "${{ secrets.VAULT_PASSWORD_LOCALHOST }}" ]; then
            echo "${{ secrets.VAULT_PASSWORD_LOCALHOST }}" > .vault_pass_localhost
          else
            echo "VAULT_PASSWORD_LOCALHOST non d√©fini !"
            exit 1
          fi

      - name: Run ansible playbook (01_deploy-ssh)
        run: |
          ansible-playbook ansible/01_deploy-ssh.yml -e "env=$ENV_NAME" --vault-password-file .vault_pass_localhost

      - name: Run ansible playbook (02_deploy-docker)
        run: |
          ansible-playbook ansible/02_deploy-docker.yml -i ansible/inventory.yml -l $ENV_NAME --vault-password-file .vault_pass -v

      - name: Run ansible playbook (03-deploy-homeassistant)
        run: |
          ansible-playbook ansible/03-deploy-homeassistant.yml -i ansible/inventory.yml -l $ENV_NAME --vault-password-file .vault_pass

      - name: Run ansible playbook (04-deploy-mosquitto)
        run: |
          ansible-playbook ansible/04-deploy-mosquitto.yml -i ansible/inventory.yml -l $ENV_NAME --vault-password-file .vault_pass

      - name: Run ansible playbook (05-deploy-zigbee2mqtt)
        run: |
          ansible-playbook ansible/05-deploy-zigbee2mqtt.yml -i ansible/inventory.yml -l $ENV_NAME --vault-password-file .vault_pass

      # - name: Clean up (99_cleanup)
      #   if: always() 
      #   run: |
      #     ansible-playbook ansible/99_cleanup.yml -l localhost

      # - name: Clean up Vault password file
      #   if: always()  
      #   run: |
      #     if [ -f .vault_pass ]; then
      #       rm .vault_pass;
      #       echo "Vault password file has been deleted.";
      #     else
      #       echo "No Vault password file found to delete.";
      #     fi

      # - name: Clean up Vault localhost password file
      #   if: always()  
      #   run: |
      #     if [ -f .vault_pass_localhost ]; then
      #       rm .vault_pass_localhost;
      #       echo "Localhost Vault password file has been deleted.";
      #     else
      #       echo "No Localhost Vault password file found to delete.";
      #     fi
