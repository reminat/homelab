name: Docker deployment

on:
  push:
    branches:
      - develop
      - main
env:
  ENV_NAME: test

jobs:
  Copy-Files:
    runs-on: self-hosted
    steps:
      - name: Debug - Afficher l'environnement
        run: |
          echo "Environnement utilisé : $ENV_NAME"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fournir le mot de passe Vault
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "${{ secrets.VAULT_PASSWORD }}" > ~/.vault_pass;
          elif [ "${{ github.ref_name }}" == "develop" ]; then
            echo "${{ secrets.VAULT_PASSWORD_TEST }}" > ~/.vault_pass;
          else
            echo "Branche non prise en charge pour fournir le mot de passe Vault.";
            exit 1;
          fi

      - name: Run ansible playbook (01_deploy-ssh)
        run: |
          ansible-playbook ansible/01_deploy-ssh.yml --vault-password-file ~/.vault_pass -e "envName=test"

      - name: Run ansible playbook (02_deploy-docker)
        run: |
          ansible-playbook ansible/02_deploy-docker.yml -l $ENV_NAME -e "envName=$ENV_NAME"

      # - name: Clean up (99_cleanup)
      #   if: always() 
      #   run: |
      #     ansible-playbook ansible/99_cleanup.yml -e "envName=${{ env.envName }}"

      # - name: Clean up Vault password file
      #   if: always()  # Exécuter cette étape même en cas d'échec des étapes précédentes
      #   run: |
      #     if [ -f ~/.vault_pass ]; then
      #       rm ~/.vault_pass;
      #       echo "Vault password file has been deleted.";
      #     else
      #       echo "No Vault password file found to delete.";
      #     fi
