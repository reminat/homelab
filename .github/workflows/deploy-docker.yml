name: Docker deployment

on:
  push:
    branches:
      - develop
      - main
env:
  ENV_NAME: ${{ github.ref_name == 'develop' && 'test' || 'prod' }}

jobs:
  Docker-deployment:
    name: Deploy Docker
    runs-on: self-hosted
    steps:
      - name: Debug - Afficher l'environnement
        run: |
          echo "Environnement utilisé : $ENV_NAME"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fournir le mot de passe Vault
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "${{ secrets.VAULT_PASSWORD }}" > ~/.vault_pass;
          elif [ "${{ github.ref_name }}" == "develop" ]; then
            echo "${{ secrets.VAULT_PASSWORD_TEST }}" > ~/.vault_pass;
          else
            echo "Branche non prise en charge pour fournir le mot de passe Vault.";
            exit 1;
          fi

      - name: Run ansible playbook (01_deploy-ssh)
        run: |
          ansible-playbook ansible/01_deploy-ssh.yml -i ansible/inventory.yml --vault-password-file ~/.vault_pass -e "env=$ENV_NAME"

      - name: Run ansible playbook (02_deploy-docker)
        run: |
          ansible-playbook ansible/02_deploy-docker.yml -i ansible/inventory.yml -e "env=$ENV_NAME"

      - name: Clean up (99_cleanup)
        if: always() 
        run: |
          ansible-playbook ansible/99_cleanup.yml

      - name: Clean up _work directory
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/homelab
          echo "Le répertoire _work a été nettoyé."
